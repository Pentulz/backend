services:
  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: pentulz
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    profiles: ["dev", "prod"]

  # API Development
  api:
    image: ghcr.io/pentulz/backend:latest
    build:
      context: .
      dockerfile: ./Dockerfile
      target: dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    profiles: ["dev"]
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Starting development server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # API Production
  api-prod:
    image: ghcr.io/pentulz/backend:latest
    build:
      context: .
      dockerfile: ./Dockerfile
      target: prod
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Starting production server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
      "
    profiles: ["prod"]

volumes:
  postgres_data:
